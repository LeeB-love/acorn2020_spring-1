<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cafe">

	<select id="getList" parameterType="cafeDto" resultType="cafeDto">
		SELECT *
		FROM
			(SELECT result1.*, ROWNUM AS rnum
			FROM
				(SELECT num,writer,title,content,viewCount,regdate
				FROM board_cafe
				<choose>
					<when test="title != null and content != null">
						WHERE title LIKE '%'||#{title}||'%' 
						OR content LIKE '%'||#{content}||'%'
					</when>
					<when test="title != null">
						WHERE title LIKE '%'||#{title}||'%'
					</when>
					<when test="writer != null">
						WHERE writer LIKE '%'||#{writer}||'%'
					</when>
				</choose>
				ORDER BY num DESC) result1)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>


	<select id="getCount" parameterType="cafeDto" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM board_cafe
		<choose>
			<when test="title != null and content != null">
				WHERE title LIKE '%'||#{title}||'%' 
				OR content LIKE '%'||#{content}||'%'
			</when>
			<when test="title != null">
				WHERE title LIKE '%'||#{title}||'%'
			</when>
			<when test="writer != null">
				WHERE writer LIKE '%'||#{writer}||'%'
			</when>
		</choose>	
	</select>
	
	
	<insert id="insert" parameterType="cafeDto">
		INSERT INTO board_cafe
		(num,writer,title,content,viewCount,regdate)
		VALUES(board_cafe_seq.NEXTVAL, #{writer}, #{title}, #{content}, #{viewCount}, SYSDATE)
	</insert>
	<!-- dto에서 알아서 빼서 바인딩하고 list에 알아서 add해주는 마이바티스... -->
	
	<select id="getData" parameterType="int" resultType="cafeDto">
		SELECT result1.*
		FROM
			(SELECT num,writer,title,content,viewCount,
				TO_CHAR(regdate,'YY.MM.DD HH24:MI') AS regdate,
				LAG(num,1,0) OVER (ORDER BY num DESC) AS prevNum,
				LEAD(num,1,0) OVER (ORDER BY num DESC) AS nextNum
			FROM board_cafe) result1
		WHERE num=#{num}
	</select>
	
	<select id="getData2" parameterType="cafeDto" resultType="cafeDto">
		SELECT result1.*
		FROM
			(SELECT num,writer,title,content,viewCount,
				TO_CHAR(regdate,'YY.MM.DD HH24:MI') AS regdate,
				LAG(num,1,0) OVER (ORDER BY num DESC) AS prevNum,
				LEAD(num,1,0) OVER (ORDER BY num DESC) AS nextNum
			FROM board_cafe
			<choose>
				<when test="title != null and content != null">
					WHERE title LIKE '%'||#{title}||'%' 
					OR content LIKE '%'||#{content}||'%'
				</when>
				<when test="title != null">
					WHERE title LIKE '%'||#{title}||'%'
				</when>
				<when test="writer != null">
					WHERE writer LIKE '%'||#{writer}||'%'
				</when>
			</choose>
			) result1
		WHERE num=#{num}
	</select>	
		<!-- select를 하다보면 함수를 쓸 일이 있는데 별칭을 둘 때, Dto에 자동 포장되고 싶으면 별칭이 Dto의 필드명과 같아야한다. -->
		
		<!-- 
	
		LAG- 명시된 값을 기준으로 이전 로우의 값 반환
		LEAD- 명시된 값을 기준으로 이후 로우의 값 반환
		
		◈ 구문형식
			LAG( 조건 , 순서, 디폴트) OVER ( PARTITION BY 절)
			LEAD( 조건 , 순서, 디폴트) OVER ( PARTITION BY 절)
			
			순서 : 몇 번째 이전or이후 값을 찾을지 결정하는 조건
			디폴트 : 검색되는 값이 없을 경우, 디폴트 값인 0을 반환한다.
	 	-->
	
	
	<update id="addViewCount" parameterType="int">
		UPDATE board_cafe
		SET viewCount=viewCount+1
		WHERE num=#{num}
	</update>
	
	
	<delete id="delete" parameterType="int">
		DELETE FROM board_cafe
		WHERE num=#{num}
	</delete>
	
	
	<update id="update" parameterType="cafeDto">
		UPDATE board_cafe
		SET title=#{title}, content=#{content}
		WHERE num=#{num}
	</update>
	
</mapper>